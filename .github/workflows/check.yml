# This is a basic workflow to help you get started with Actions

name: PSVita project build check

# Controls when the action will run. 
on:
  # schedule:
    # Run at 9:00 JST on Sunday
    # - cron: '0 0 * * 0'

  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: []
    # branches: [ master ]
  pull_request:
    branches: []
    # branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build and install VitaSDK
        run: |
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
          rm -rf /home/runner/work/vitasdk
          rm -rf vdpm
          REPO_WORK_PATH="/home/runner/work/$REPO_NAME/$GITHUB_RUN_NUMBER"
          mkdir "$REPO_WORK_PATH"
          cd "$REPO_WORK_PATH"
          export VITASDK="$REPO_WORK_PATH/vitasdk"
          export PATH=$VITASDK/bin:$PATH
          git clone https://github.com/vitasdk/vdpm
          cd vdpm
          chmod +x bootstrap-vitasdk.sh
          ./bootstrap-vitasdk.sh
          chmod +x install-all.sh
          ./install-all.sh
      - name: Build project
        run: |
          echo Build starting
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
          REPO_WORK_PATH="/home/runner/work/$REPO_NAME/$GITHUB_RUN_NUMBER"
          export VITASDK="$REPO_WORK_PATH/vitasdk"
          export PATH=$VITASDK/bin:$PATH
          if [ -e extra.yml ]; then
            if [ ! -d extra ]; then
              mkdir extra
              vita-libs-gen -c extra.yml extra
              cd extra
              cmake .
              make
              cd ..
            fi
          fi
          if [ -e import.yml ]; then
            if [ ! -d extra ]; then
              mkdir extra
              vita-libs-gen -c import.yml extra
              cd extra
              cmake .
              make
              cd ..
            fi
          fi
          if [ ! -d build ]; then
            mkdir build
          fi
          cd build
          cmake ../
          make
          cd ..
      - name: Upload
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: TestBuild
          path: |
            ./build/*.a
            ./build/*.vpk
            ./build/*.yml
            ./build/*.elf
            ./build/*.velf
            ./build/*.bin
            ./build/*.self
            ./build/*.skprx
            ./build/*.suprx
      - name: Upload(All)
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: TestBuildAll
          path:
            ./build/
